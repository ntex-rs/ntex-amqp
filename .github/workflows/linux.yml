name: CI (Linux)

on: [push, pull_request]

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.75.0 # MSRV
          - stable
          - nightly

    name: ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1.0.1

      - name: Cache cargo tarpaulin
        if: matrix.version == '1.75.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ matrix.version }}-x86_64-unknown-linux-gnu-tarpaulin

      - name: Run tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with:
          command: test
          args: --all --no-fail-fast --features=ntex/tokio -- --nocapture

      - name: Install tarpaulin
        if: matrix.version == '1.75.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        continue-on-error: true
        run: |
          cargo install cargo-tarpaulin

      - name: Generate coverage report
        if: matrix.version == '1.75.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        continue-on-error: true
        run: |
          cargo tarpaulin --out Xml --all --features=ntex/tokio

      - name: Upload to Codecov
        if: matrix.version == '1.75.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        continue-on-error: true
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cobertura.xml
          fail_ci_if_error: true

      - name: Install cargo-cache
        continue-on-error: true
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean

      - name: Clear the cargo caches
        continue-on-error: true
        run: |
          cargo-cache
